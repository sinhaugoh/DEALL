// Mocks generated by Mockito 5.0.12 from annotations
// in deall/test/core/infrastructure/retailer_dto_test.dart.
// Do not manually edit this file.

import 'package:deall/core/application/retailer.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _Fake$RetailerCopyWith<$Res> extends _i1.Fake
    implements _i2.$RetailerCopyWith<$Res> {}

/// A class which mocks [Retailer].
///
/// See the documentation for Mockito's code generation for more information.
class MockRetailer extends _i1.Mock implements _i2.Retailer {
  MockRetailer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  String get block =>
      (super.noSuchMethod(Invocation.getter(#block), returnValue: '')
          as String);
  @override
  String get street =>
      (super.noSuchMethod(Invocation.getter(#street), returnValue: '')
          as String);
  @override
  String get unit =>
      (super.noSuchMethod(Invocation.getter(#unit), returnValue: '') as String);
  @override
  String get postalCode =>
      (super.noSuchMethod(Invocation.getter(#postalCode), returnValue: '')
          as String);
  @override
  String get operatingHours =>
      (super.noSuchMethod(Invocation.getter(#operatingHours), returnValue: '')
          as String);
  @override
  bool get visibility =>
      (super.noSuchMethod(Invocation.getter(#visibility), returnValue: false)
          as bool);
  @override
  _i2.$RetailerCopyWith<_i2.Retailer> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$RetailerCopyWith<_i2.Retailer>())
          as _i2.$RetailerCopyWith<_i2.Retailer>);
  @override
  String addressLine() =>
      (super.noSuchMethod(Invocation.method(#addressLine, []), returnValue: '')
          as String);
}
