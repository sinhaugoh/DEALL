// Mocks generated by Mockito 5.0.12 from annotations
// in deall/test/auth/application/auth_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:deall/auth/application/app_user.dart' as _i5;
import 'package:deall/auth/application/auth_failure.dart' as _i6;
import 'package:deall/auth/infrastructure/auth_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.AppUser?> getFirebaseUser() => (super.noSuchMethod(
      Invocation.method(#getFirebaseUser, []),
      returnValue: Future<_i5.AppUser?>.value()) as _i4.Future<_i5.AppUser?>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i5.AppUser>> signIn(
          {String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#signIn, [], {#email: email, #password: password}),
          returnValue: Future<_i2.Either<_i6.AuthFailure, _i5.AppUser>>.value(
              _FakeEither<_i6.AuthFailure, _i5.AppUser>())) as _i4
          .Future<_i2.Either<_i6.AuthFailure, _i5.AppUser>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> consumerSignUp(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #consumerSignUp, [], {#email: email, #password: password}),
              returnValue: Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                  _FakeEither<_i6.AuthFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
              returnValue: Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                  _FakeEither<_i6.AuthFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
}
