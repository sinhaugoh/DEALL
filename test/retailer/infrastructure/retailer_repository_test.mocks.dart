// Mocks generated by Mockito 5.0.12 from annotations
// in deall/test/retailer/infrastructure/retailer_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:deall/core/application/retailer/retailer.dart' as _i4;
import 'package:deall/core/infrastructure/retailer/retailer_dto.dart' as _i2;
import 'package:deall/retailer/infrastructure/retailer_remote_service.dart'
    as _i5;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeRetailerDTO extends _i1.Fake implements _i2.RetailerDTO {}

class _FakeDuration extends _i1.Fake implements Duration {}

class _FakeAddressCheckResult extends _i1.Fake
    implements _i3.AddressCheckResult {}

class _Fake$RetailerDTOCopyWith<$Res> extends _i1.Fake
    implements _i2.$RetailerDTOCopyWith<$Res> {}

class _FakeRetailer extends _i1.Fake implements _i4.Retailer {}

/// A class which mocks [RetailerRemoteService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRetailerRemoteService extends _i1.Mock
    implements _i5.RetailerRemoteService {
  MockRetailerRemoteService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.RetailerDTO> getRetailer() =>
      (super.noSuchMethod(Invocation.method(#getRetailer, []),
              returnValue: Future<_i2.RetailerDTO>.value(_FakeRetailerDTO()))
          as _i6.Future<_i2.RetailerDTO>);
  @override
  _i6.Future<void> updateRetailer(_i2.RetailerDTO? retailerDTO) =>
      (super.noSuchMethod(Invocation.method(#updateRetailer, [retailerDTO]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
}

/// A class which mocks [InternetConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnectionChecker extends _i1.Mock
    implements _i3.InternetConnectionChecker {
  MockInternetConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.AddressCheckOptions> get addresses =>
      (super.noSuchMethod(Invocation.getter(#addresses),
              returnValue: <_i3.AddressCheckOptions>[])
          as List<_i3.AddressCheckOptions>);
  @override
  set addresses(List<_i3.AddressCheckOptions>? _addresses) =>
      super.noSuchMethod(Invocation.setter(#addresses, _addresses),
          returnValueForMissingStub: null);
  @override
  Duration get checkInterval =>
      (super.noSuchMethod(Invocation.getter(#checkInterval),
          returnValue: _FakeDuration()) as Duration);
  @override
  set checkInterval(Duration? _checkInterval) =>
      super.noSuchMethod(Invocation.setter(#checkInterval, _checkInterval),
          returnValueForMissingStub: null);
  @override
  _i6.Future<bool> get hasConnection =>
      (super.noSuchMethod(Invocation.getter(#hasConnection),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i3.InternetConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(Invocation.getter(#connectionStatus),
              returnValue: Future<_i3.InternetConnectionStatus>.value(
                  _i3.InternetConnectionStatus.connected))
          as _i6.Future<_i3.InternetConnectionStatus>);
  @override
  _i6.Stream<_i3.InternetConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(Invocation.getter(#onStatusChange),
              returnValue: Stream<_i3.InternetConnectionStatus>.empty())
          as _i6.Stream<_i3.InternetConnectionStatus>);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  bool get isActivelyChecking =>
      (super.noSuchMethod(Invocation.getter(#isActivelyChecking),
          returnValue: false) as bool);
  @override
  _i6.Future<_i3.AddressCheckResult> isHostReachable(
          _i3.AddressCheckOptions? options) =>
      (super.noSuchMethod(Invocation.method(#isHostReachable, [options]),
              returnValue: Future<_i3.AddressCheckResult>.value(
                  _FakeAddressCheckResult()))
          as _i6.Future<_i3.AddressCheckResult>);
}

/// A class which mocks [FirebaseAuthException].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthException extends _i1.Mock
    implements _i7.FirebaseAuthException {
  MockFirebaseAuthException() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get plugin =>
      (super.noSuchMethod(Invocation.getter(#plugin), returnValue: '')
          as String);
  @override
  String get code =>
      (super.noSuchMethod(Invocation.getter(#code), returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirebaseException].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockFirebaseException extends _i1.Mock implements _i7.FirebaseException {
  MockFirebaseException() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get plugin =>
      (super.noSuchMethod(Invocation.getter(#plugin), returnValue: '')
          as String);
  @override
  String get code =>
      (super.noSuchMethod(Invocation.getter(#code), returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RetailerDTO].
///
/// See the documentation for Mockito's code generation for more information.
class MockRetailerDTO extends _i1.Mock implements _i2.RetailerDTO {
  MockRetailerDTO() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  String get block =>
      (super.noSuchMethod(Invocation.getter(#block), returnValue: '')
          as String);
  @override
  String get street =>
      (super.noSuchMethod(Invocation.getter(#street), returnValue: '')
          as String);
  @override
  String get unit =>
      (super.noSuchMethod(Invocation.getter(#unit), returnValue: '') as String);
  @override
  String get postalCode =>
      (super.noSuchMethod(Invocation.getter(#postalCode), returnValue: '')
          as String);
  @override
  String get operatingHours =>
      (super.noSuchMethod(Invocation.getter(#operatingHours), returnValue: '')
          as String);
  @override
  String get description =>
      (super.noSuchMethod(Invocation.getter(#description), returnValue: '')
          as String);
  @override
  String get image =>
      (super.noSuchMethod(Invocation.getter(#image), returnValue: '')
          as String);
  @override
  bool get visibility =>
      (super.noSuchMethod(Invocation.getter(#visibility), returnValue: false)
          as bool);
  @override
  String get uen =>
      (super.noSuchMethod(Invocation.getter(#uen), returnValue: '') as String);
  @override
  _i2.$RetailerDTOCopyWith<_i2.RetailerDTO> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$RetailerDTOCopyWith<_i2.RetailerDTO>())
          as _i2.$RetailerDTOCopyWith<_i2.RetailerDTO>);
  @override
  _i4.Retailer toDomain() =>
      (super.noSuchMethod(Invocation.method(#toDomain, []),
          returnValue: _FakeRetailer()) as _i4.Retailer);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
